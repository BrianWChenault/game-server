AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: >-
  A SAM CLI template for a game server with supporting various APIs

Parameters:
  TableName:
    Type: String
    Default: 'game_connections'
    Description: name of DynamoDB to store existing connections to the game server
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z_]+$
  StageName:
    Type: String
    Default: 'Prod'
    Description: Name of the stage to deploy to
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z_]+$

Globals:
  Function:
    Runtime: java8
    MemorySize: 512
    Timeout: 15
    CodeUri: build/libs/game-server-0.1.jar
    Environment:
      Variables:
        TABLE_NAME: !Ref TableName
        STAGE_NAME: !Ref StageName
        AWS_REGION: 'us-east-2'
   Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref TableName

Resources:
  GameServerWebSocket:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: GameServerWebSocket
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.action"
  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref GameServerWebSocket
      RouteKey: $connect
      AuthorizationType: NONE
      OperationName: ConnectRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref ConnectInteg
  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref GameServerWebSocket
      RouteKey: $disconnect
      AuthorizationType: NONE
      OperationName: DisconnectRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref DisconnectInteg
  GameMessageRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref GameServerWebSocket
      RouteKey: gameMessage
      AuthorizationType: NONE
      OperationName: GameMessageRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref GameMessageInteg
  ConnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref GameServerWebSocket
      Description: Connect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub:
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnConnectFunction.Arn}/invocations
  DisconnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref GameServerWebSocket
      Description: Disconnect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub:
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnDisconnectFunction.Arn}/invocations
  GameMessageInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref GameServerWebSocket
      Description: Game Message Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub:
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GameMessageFunction.Arn}/invocations
  Deployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
      - ConnectRoute
    Properties:
      ApiId: !Ref GameServerWebSocket
  Stage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: !Ref StageName
      Description: Stage of deployment
      DeploymentId: !Ref Deployment
      ApiId: !Ref GameServerWebSocket
  ConnectionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: "gameId"
        AttributeType: "S"
      - AttributeName: "connectionId"
        AttributeType: "S"
      KeySchema:
      - AttributeName: "gameId"
        KeyType: "HASH"
      - AttributeName: "connectionId"
        KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      SSESpecification:
        SSEEnabled: True
      TableName: !Ref TableName
  OnConnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GameServer_OnConnect
      Description: Connect websocket to game server
      Handler: com.bchenault.game_server.OnConnectHandler
  OnDisconnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GameServer_OnDisconnect
      Description: Disconnect websocket to game server
      Handler: com.bchenault.game_server.OnDisconnectHandler
  GameMessageFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GameServer_GameMessage
      Description: Handle a message containing game update information
      Handler: com.bchenault.game_server.GameMessageHandler
  OnConnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - GameServerWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnConnectFunction
      Principal: apigateway.amazonaws.com
  OnDisconnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - GameServerWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnDisconnectFunction
      Principal: apigateway.amazonaws.com
  GameMessagePermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - GameServerWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref GameMessageFunction
      Principal: apigateway.amazonaws.com
Outputs:
  ConnectionsTableArn:
    Description: "Connections table ARN"
    Value: !GetAtt ConnectionsTable.Arn

  OnConnectFunctionArn:
    Description: "OnConnect Function ARN"
    Value: !GetAtt OnConnectFunction.Arn

  OnDisconnectFunctionArn:
    Description: "OnDisconnect Function ARN"
    Value: !GetAtt OnDisconnectFunction.Arn

  GameMessageFunctionArn:
    Description: "GameMessage Function ARN"
    Value: !GetAtt GameMessageFunction.Arn
